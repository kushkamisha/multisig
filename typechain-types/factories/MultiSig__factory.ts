/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MultiSig, MultiSigInterface } from "../MultiSig";

const _abi = [
  {
    inputs: [
      {
        internalType: "address[]",
        name: "owners_",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "threshold_",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "destination",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "bytes32[]",
        name: "sigR",
        type: "bytes32[]",
      },
      {
        internalType: "bytes32[]",
        name: "sigS",
        type: "bytes32[]",
      },
      {
        internalType: "uint8[]",
        name: "sigV",
        type: "uint8[]",
      },
    ],
    name: "execute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isOwner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "owners",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "threshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b506040516200165538038062001655833981810160405281019062000037919062000424565b81518111158015620000495750600081115b6200008b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200008290620004eb565b60405180910390fd5b80608081815250508160019080519060200190620000ab9291906200014d565b5060005b82518110156200014457600160026000858481518110620000d557620000d46200050d565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555080806200013b906200056b565b915050620000af565b505050620005b9565b828054828255906000526020600020908101928215620001c9579160200282015b82811115620001c85782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906200016e565b5b509050620001d89190620001dc565b5090565b5b80821115620001f7576000816000905550600101620001dd565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200025f8262000214565b810181811067ffffffffffffffff8211171562000281576200028062000225565b5b80604052505050565b600062000296620001fb565b9050620002a4828262000254565b919050565b600067ffffffffffffffff821115620002c757620002c662000225565b5b602082029050602081019050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200030a82620002dd565b9050919050565b6200031c81620002fd565b81146200032857600080fd5b50565b6000815190506200033c8162000311565b92915050565b6000620003596200035384620002a9565b6200028a565b905080838252602082019050602084028301858111156200037f576200037e620002d8565b5b835b81811015620003ac57806200039788826200032b565b84526020840193505060208101905062000381565b5050509392505050565b600082601f830112620003ce57620003cd6200020f565b5b8151620003e084826020860162000342565b91505092915050565b6000819050919050565b620003fe81620003e9565b81146200040a57600080fd5b50565b6000815190506200041e81620003f3565b92915050565b600080604083850312156200043e576200043d62000205565b5b600083015167ffffffffffffffff8111156200045f576200045e6200020a565b5b6200046d85828601620003b6565b925050602062000480858286016200040d565b9150509250929050565b600082825260208201905092915050565b7f496e76616c6964207468726573686f6c64000000000000000000000000000000600082015250565b6000620004d36011836200048a565b9150620004e0826200049b565b602082019050919050565b600060208201905081810360008301526200050681620004c4565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006200057882620003e9565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415620005ae57620005ad6200053c565b5b600182019050919050565b608051611072620005e3600039600081816101b4015281816101de015261029c01526110726000f3fe60806040526004361061004e5760003560e01c8063025e7c271461005a5780632f54bf6e1461009757806342cde4e8146100d4578063affed0e0146100ff578063d70511761461012a57610055565b3661005557005b600080fd5b34801561006657600080fd5b50610081600480360381019061007c9190610588565b610153565b60405161008e91906105f6565b60405180910390f35b3480156100a357600080fd5b506100be60048036038101906100b9919061063d565b610192565b6040516100cb9190610685565b60405180910390f35b3480156100e057600080fd5b506100e96101b2565b6040516100f691906106af565b60405180910390f35b34801561010b57600080fd5b506101146101d6565b60405161012191906106af565b60405180910390f35b34801561013657600080fd5b50610151600480360381019061014c9190610a48565b6101dc565b005b6001818154811061016357600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60026020528060005260406000206000915054906101000a900460ff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b60005481565b7f000000000000000000000000000000000000000000000000000000000000000083511015801561020e575081518351145b801561021b575080518351145b61025a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025190610bc8565b60405180910390fd5b60006102953088888860005460405160200161027a959493929190610cf4565b6040516020818303038152906040528051906020012061050e565b905060005b7f00000000000000000000000000000000000000000000000000000000000000008110156104725760006001838584815181106102da576102d9610d4f565b5b60200260200101518885815181106102f5576102f4610d4f565b5b60200260200101518886815181106103105761030f610d4f565b5b6020026020010151604051600081526020016040526040516103359493929190610d9c565b6020604051602081039080840390855afa158015610357573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16116103d2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103c990610e2d565b60405180910390fd5b600260008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1661045e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045590610e99565b60405180910390fd5b50808061046a90610ee8565b91505061029a565b5060016000808282546104859190610f31565b9250508190555060008773ffffffffffffffffffffffffffffffffffffffff1687876040516104b49190610f87565b60006040518083038185875af1925050503d80600081146104f1576040519150601f19603f3d011682016040523d82523d6000602084013e6104f6565b606091505b505090508061050457600080fd5b5050505050505050565b6000816040516020016105219190611016565b604051602081830303815290604052805190602001209050919050565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b61056581610552565b811461057057600080fd5b50565b6000813590506105828161055c565b92915050565b60006020828403121561059e5761059d610548565b5b60006105ac84828501610573565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006105e0826105b5565b9050919050565b6105f0816105d5565b82525050565b600060208201905061060b60008301846105e7565b92915050565b61061a816105d5565b811461062557600080fd5b50565b60008135905061063781610611565b92915050565b60006020828403121561065357610652610548565b5b600061066184828501610628565b91505092915050565b60008115159050919050565b61067f8161066a565b82525050565b600060208201905061069a6000830184610676565b92915050565b6106a981610552565b82525050565b60006020820190506106c460008301846106a0565b92915050565b60006106d5826105b5565b9050919050565b6106e5816106ca565b81146106f057600080fd5b50565b600081359050610702816106dc565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61075b82610712565b810181811067ffffffffffffffff8211171561077a57610779610723565b5b80604052505050565b600061078d61053e565b90506107998282610752565b919050565b600067ffffffffffffffff8211156107b9576107b8610723565b5b6107c282610712565b9050602081019050919050565b82818337600083830152505050565b60006107f16107ec8461079e565b610783565b90508281526020810184848401111561080d5761080c61070d565b5b6108188482856107cf565b509392505050565b600082601f83011261083557610834610708565b5b81356108458482602086016107de565b91505092915050565b600067ffffffffffffffff82111561086957610868610723565b5b602082029050602081019050919050565b600080fd5b6000819050919050565b6108928161087f565b811461089d57600080fd5b50565b6000813590506108af81610889565b92915050565b60006108c86108c38461084e565b610783565b905080838252602082019050602084028301858111156108eb576108ea61087a565b5b835b81811015610914578061090088826108a0565b8452602084019350506020810190506108ed565b5050509392505050565b600082601f83011261093357610932610708565b5b81356109438482602086016108b5565b91505092915050565b600067ffffffffffffffff82111561096757610966610723565b5b602082029050602081019050919050565b600060ff82169050919050565b61098e81610978565b811461099957600080fd5b50565b6000813590506109ab81610985565b92915050565b60006109c46109bf8461094c565b610783565b905080838252602082019050602084028301858111156109e7576109e661087a565b5b835b81811015610a1057806109fc888261099c565b8452602084019350506020810190506109e9565b5050509392505050565b600082601f830112610a2f57610a2e610708565b5b8135610a3f8482602086016109b1565b91505092915050565b60008060008060008060c08789031215610a6557610a64610548565b5b6000610a7389828a016106f3565b9650506020610a8489828a01610573565b955050604087013567ffffffffffffffff811115610aa557610aa461054d565b5b610ab189828a01610820565b945050606087013567ffffffffffffffff811115610ad257610ad161054d565b5b610ade89828a0161091e565b935050608087013567ffffffffffffffff811115610aff57610afe61054d565b5b610b0b89828a0161091e565b92505060a087013567ffffffffffffffff811115610b2c57610b2b61054d565b5b610b3889828a01610a1a565b9150509295509295509295565b600082825260208201905092915050565b7f496e76616c6964206e756d626572206f66206d657373616765207369676e657260008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b6000610bb2602183610b45565b9150610bbd82610b56565b604082019050919050565b60006020820190508181036000830152610be181610ba5565b9050919050565b60008160601b9050919050565b6000610c0082610be8565b9050919050565b6000610c1282610bf5565b9050919050565b610c2a610c25826105d5565b610c07565b82525050565b6000610c3b82610bf5565b9050919050565b610c53610c4e826106ca565b610c30565b82525050565b6000819050919050565b610c74610c6f82610552565b610c59565b82525050565b600081519050919050565b600081905092915050565b60005b83811015610cae578082015181840152602081019050610c93565b83811115610cbd576000848401525b50505050565b6000610cce82610c7a565b610cd88185610c85565b9350610ce8818560208601610c90565b80840191505092915050565b6000610d008288610c19565b601482019150610d108287610c42565b601482019150610d208286610c63565b602082019150610d308285610cc3565b9150610d3c8284610c63565b6020820191508190509695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b610d878161087f565b82525050565b610d9681610978565b82525050565b6000608082019050610db16000830187610d7e565b610dbe6020830186610d8d565b610dcb6040830185610d7e565b610dd86060830184610d7e565b95945050505050565b7f496e636f72726563742061646472657373000000000000000000000000000000600082015250565b6000610e17601183610b45565b9150610e2282610de1565b602082019050919050565b60006020820190508181036000830152610e4681610e0a565b9050919050565b7f41646472657373206973206e6f7420616e206f776e6572000000000000000000600082015250565b6000610e83601783610b45565b9150610e8e82610e4d565b602082019050919050565b60006020820190508181036000830152610eb281610e76565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610ef382610552565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610f2657610f25610eb9565b5b600182019050919050565b6000610f3c82610552565b9150610f4783610552565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610f7c57610f7b610eb9565b5b828201905092915050565b6000610f938284610cc3565b915081905092915050565b600081905092915050565b7f19457468657265756d205369676e6564204d6573736167653a0a333200000000600082015250565b6000610fdf601c83610f9e565b9150610fea82610fa9565b601c82019050919050565b6000819050919050565b61101061100b8261087f565b610ff5565b82525050565b600061102182610fd2565b915061102d8284610fff565b6020820191508190509291505056fea26469706673582212208b3b24c664ee0dbc8037700a994d19bdc1d205614a9138e1f0d18f8a4192b41364736f6c634300080b0033";

type MultiSigConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MultiSigConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MultiSig__factory extends ContractFactory {
  constructor(...args: MultiSigConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    owners_: string[],
    threshold_: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MultiSig> {
    return super.deploy(
      owners_,
      threshold_,
      overrides || {}
    ) as Promise<MultiSig>;
  }
  getDeployTransaction(
    owners_: string[],
    threshold_: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(owners_, threshold_, overrides || {});
  }
  attach(address: string): MultiSig {
    return super.attach(address) as MultiSig;
  }
  connect(signer: Signer): MultiSig__factory {
    return super.connect(signer) as MultiSig__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MultiSigInterface {
    return new utils.Interface(_abi) as MultiSigInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MultiSig {
    return new Contract(address, _abi, signerOrProvider) as MultiSig;
  }
}
